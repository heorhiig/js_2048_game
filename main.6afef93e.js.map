{"version":3,"sources":["scripts/main.js"],"names":["messegLose","document","querySelector","messegWin","messegStart","Restarttbutton","scoreTable","tiles","getElementsByClassName","StartButton","rows","columns","score","board","stopGame","endGame","gameOver","classList","remove","empty","r","c","addNum","emptyCells","push","row","column","length","randomIndex","Math","floor","random","num","tile","getElementById","toString","innerText","add","upDateTile","value","filterZeros","filter","slide","i","slideLeft","moved","originalRow","slice","arraysEqual","slideRight","shiftedRow","reverse","slideUp","originalCol","getColumn","shiftedCol","slideDown","matrix","col","map","arr1","arr2","rc","addEventListener","createElement","id","append","Array","from","forEach","className","innerHTML","even","key"],"mappings":"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","file":"main.6afef93e.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable max-len */\n'use strict';\n\nconst messegLose = document.querySelector('.message-lose');\nconst messegWin = document.querySelector('.message-win');\nconst messegStart = document.querySelector('.message-start');\nconst Restarttbutton = document.querySelector('.restart');\nconst scoreTable = document.querySelector('.game-score');\nconst tiles = document.getElementsByClassName('tile');\nconst StartButton = document.querySelector('.start');\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet stopGame = false;\n\nStartButton.addEventListener('click', () => {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n      const num = board[r][c];\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      upDateTile(tile, num);\n      document.getElementById('board').append(tile);\n    }\n  }\n\n  StartButton.classList.add('hidden');\n  messegStart.classList.add('hidden');\n  Restarttbutton.classList.remove('hidden');\n\n  addNum();\n  addNum();\n});\n\nRestarttbutton.addEventListener('click', function restartGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  const tileArr = Array.from(tiles);\n\n  tileArr.forEach((tile) => {\n    tile.innerText = '';\n    tile.className = 'tile';\n  });\n\n  score = 0;\n  scoreTable.innerHTML = score;\n  messegLose.classList.add('hidden');\n  messegWin.classList.add('hidden');\n  addNum();\n  addNum();\n\n  stopGame = false;\n});\n\nfunction endGame() {\n  if (gameOver()) {\n    stopGame = true;\n    messegLose.classList.remove('hidden');\n  }\n}\n\nfunction empty() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addNum() {\n  if (!empty()) {\n    return true;\n  }\n\n  const emptyCells = [];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        emptyCells.push({\n          row: r,\n          column: c,\n        });\n      }\n    }\n  }\n\n  if (emptyCells.length === 0) {\n    return false;\n  }\n\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n  const { row, column } = emptyCells[randomIndex];\n  const num = Math.random() < 0.01 ? 4 : 2;\n\n  board[row][column] = num;\n\n  const tile = document.getElementById(row.toString() + '-' + column.toString());\n\n  tile.innerText = num.toString();\n  tile.classList.add(`tile--${num}`);\n\n  return true;\n}\n\nfunction upDateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('tile');\n\n  if (num > 0) {\n    tile.innerText = num.toString();\n\n    if (num <= 2048) {\n      tile.classList.add(`tile--${num}`);\n    }\n\n    if (num === 2048) {\n      messegWin.classList.remove('hidden');\n    }\n  }\n}\n\ndocument.addEventListener('keydown', even => {\n  if (stopGame) {\n    return false;\n  }\n\n  switch (even.key) {\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n  }\n\n  scoreTable.innerText = score;\n});\n\nfunction filterZeros(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let r = row;\n\n  r = filterZeros(r);\n\n  for (let i = 0; i < r.length; i++) {\n    if (r[i] === r[i + 1]) {\n      r[i] *= 2;\n      r[i + 1] = 0;\n      score += r[i];\n    }\n  }\n\n  r = filterZeros(r);\n\n  while (r.length < columns) {\n    r.push(0);\n  }\n\n  return r;\n}\n\nfunction slideLeft() {\n  let moved = false;\n\n  for (let r = 0; r < rows; r++) {\n    const originalRow = board[r].slice();\n\n    board[r] = slide(board[r]);\n\n    if (!arraysEqual(originalRow, board[r])) {\n      moved = true;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      upDateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    addNum();\n    endGame();\n  }\n}\n\nfunction slideRight() {\n  let moved = false;\n\n  for (let r = 0; r < rows; r++) {\n    const originalRow = board[r].slice();\n    const shiftedRow = slide(board[r].slice().reverse()).reverse();\n\n    board[r] = shiftedRow;\n\n    if (!arraysEqual(originalRow, board[r])) {\n      moved = true;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      const num = board[r][c];\n\n      upDateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    addNum();\n    endGame();\n  }\n}\n\nfunction slideUp() {\n  let moved = false;\n\n  for (let c = 0; c < columns; c++) {\n    const originalCol = getColumn(board, c).slice();\n    const shiftedCol = slide(getColumn(board, c)).slice();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = shiftedCol[r];\n    }\n\n    if (!arraysEqual(originalCol, getColumn(board, c))) {\n      moved = true;\n    }\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      upDateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    addNum();\n    endGame();\n  }\n}\n\nfunction slideDown() {\n  let moved = false;\n\n  for (let c = 0; c < columns; c++) {\n    const originalCol = getColumn(board, c).slice().reverse();\n    const shiftedCol = slide(getColumn(board, c).slice().reverse()).reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = shiftedCol[r];\n    }\n\n    if (!arraysEqual(originalCol, getColumn(board, c).slice().reverse())) {\n      moved = true;\n    }\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      upDateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    addNum();\n    endGame();\n  }\n}\n\nfunction getColumn(matrix, col) {\n  return matrix.map(row => row[col]);\n}\n\nfunction arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction gameOver() {\n  if (empty()) {\n    return false;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const rc = board[r][c];\n\n      if (c < columns - 1 && rc === board[r][c + 1]) {\n        return false;\n      }\n\n      if (r < rows - 1 && rc === board[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n\n  // eslint-disable-next-line no-console, no-unreachable\n  console.log('Finish');\n}\n"]}